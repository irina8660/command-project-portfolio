import{A as d,S as v,N as f,K as b,i as p}from"./assets/vendor-CVvar43t.js";(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))i(t);new MutationObserver(t=>{for(const n of t)if(n.type==="childList")for(const c of n.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&i(c)}).observe(document,{childList:!0,subtree:!0});function s(t){const n={};return t.integrity&&(n.integrity=t.integrity),t.referrerPolicy&&(n.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?n.credentials="include":t.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function i(t){if(t.ep)return;t.ep=!0;const n=s(t);fetch(t.href,n)}})();const r={headerMenuButton:document.querySelector(".header__menu-button"),navList:document.querySelector(".header__nav-list"),mobileMenuContainer:document.querySelector(".header__mobile-menu-container"),mobileMenuButton:document.querySelector(".header__mobile-menu-button"),mobileMenuCloseButton:document.querySelector(".header__mobile-menu-close-button"),mobileMenuNav:document.querySelector(".header__mobile-nav"),navLinks:document.querySelectorAll(".header__mobile-nav-link"),orderButtonMobile:document.querySelector(".header__mobile-order-button")};r.headerMenuButton.addEventListener("click",o=>{o.preventDefault();const e=r.navList.classList.contains("menu-visible");r.navList.classList.toggle("menu-visible",!e)});document.addEventListener("click",o=>{!(r.mobileMenuContainer.contains(o.target)||r.headerMenuButton.contains(o.target))&&r.navList.classList.contains("menu-visible")&&r.navList.classList.remove("menu-visible")});r.mobileMenuButton.addEventListener("click",w);r.mobileMenuCloseButton.addEventListener("click",l);function w(){r.mobileMenuContainer.classList.add("show"),document.body.classList.add("ModalBodyLock")}function l(){r.mobileMenuContainer.classList.remove("show"),document.body.classList.remove("ModalBodyLock")}r.navLinks.forEach(o=>{o.addEventListener("click",e=>{l();const s=o.getAttribute("href"),i=document.querySelector(s);i&&i.scrollIntoView({behavior:"smooth"})})});r.orderButtonMobile.addEventListener("click",o=>{l();const e=document.querySelector("#work-together");e&&e.scrollIntoView({behavior:"smooth"})});new d(".accordion-container",{duration:250,openOnInit:[0]});document.addEventListener("DOMContentLoaded",()=>{new d(".questions",{duration:400,showMultiple:!0,openOnInit:[],elementClass:"question-group",triggerClass:"svg-icon-group",panelClass:"answer",collapse:!0,beforeOpen:o=>{const e=o.querySelector(".arrow-icon");e&&(e.style.transform="rotate(180deg)")},beforeClose:o=>{const e=o.querySelector(".arrow-icon");e&&(e.style.transform="rotate(0deg)")}})});const a={coversItems:document.querySelectorAll(".covers-item"),coversContent:document.querySelector(".covers-content")},h=new IntersectionObserver(o=>{o.forEach(e=>{e.isIntersecting?a.coversItems.forEach(s=>s.classList.add("covers-animation")):a.coversItems.forEach(s=>s.classList.remove("covers-animation"))})});h.observe(a.coversContent);document.addEventListener("DOMContentLoaded",async function(){const o=document.querySelector(".reviews"),e=document.querySelector(".reviews-block");try{let t=(await(await fetch("https://portfolio-js.b.goit.study/api/reviews")).json()).map(({avatar_url:c,author:u,review:m})=>`
     <li class="swiper-slide reviews-elem"> 
       <img class="reviews-img" src="${c}" alt="${u}">
       <div class="reviews-info">
         <p class="reviews-autor">${u}</p>
         <p class="reviews-text">${m}</p>
       </div>
     </li>
   `).join("");e.innerHTML=t;const n=new v(".swiper",{modules:[f,b],simulateTouch:!0,touchRatio:1,touchEventsTarget:"container",grabCursor:!0,slidesPerView:1,spaceBetween:16,navigation:{nextEl:".swiper-button-next",prevEl:".swiper-button-prev"},keyboard:{enabled:!0,onlyInViewport:!0},breakpoints:{768:{slidesPerView:2},1280:{slidesPerView:4}}})}catch(s){console.error(s),e.innerHTML='<p class="not-found">Not found</p>';const i=new IntersectionObserver(t=>{t.forEach(n=>{n.isIntersecting&&(p.error({message:"Reviews not found",position:"topRight"}),i.disconnect())})},{threshold:.1});i.observe(o)}});
//# sourceMappingURL=index.js.map
